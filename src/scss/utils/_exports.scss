@import './variables';

// This file sets up an export of all variables (that is, whatever
// variable maps are iterated upon and exported here)

// Utility to capitalize string
@function capitalize($str) {
  @return to-upper-case(str-slice($str, 1, 1)) + str-slice($str, 2);
}

// Utility to add group name to key
@function prepend-key($pre, $key) {
  @return $pre + capitalize(($key));
}

// Utility to add group name to subkey
@function prepend-sub-key($pre, $key, $subkey) {
  @if $subkey == 'base' {
    @return prepend-key($pre, $key);
  } @else {
    @return prepend-key($pre, $key) + capitalize($subkey);
  }
}

// Utility to check if variable is a map
@function is-map($var){
  @return type-of($var) == 'map';
}

:export {
  // Export z-indices
  @each $key, $value in $z-indices {
    #{prepend-key('zIndex', $key)}: $value;
  }
  // Export breakpoints
  @each $key, $value in $breakpoints {
    #{prepend-key('breakpoint', $key)}: $value;
  }

  // Export spacing
  @each $key, $value in $spacing {
    #{prepend-key('spacing', $key)}: $value;
  }

  // Export layout
  @each $key, $value in $layout {
    #{prepend-key('layout', $key)}: $value;
  }

  // Export ui-layout
  @each $key, $value in $ui-layout {
    #{prepend-key('uiLayout', $key)}: $value;
  }

  // Export font-families
  @each $key, $value in $font-families {
    #{prepend-key('fontFamily', $key)}: $value;
  }

  // Export colors
  @each $key, $value in $colors {
    @if is-map($v) {
      @each $subkey, $sub-v in $value {
        #{prepend-sub-key('color', $key, $subkey)}: $sub-v;
      }
    } @else {
      #{prepend-key('color', $key)}: $value;
    }
  }

  // Export border-radii
  @each $key, $value in $border-radii {
    #{prepend-key('borderRadius', $key)}: $value;
  }
}
